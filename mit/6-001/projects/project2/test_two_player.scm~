(define (test-equivalence goal value)
  (define (num-equiv goal value)
    (define tolerance 0.001)
    (if (< (abs (- goal value)) tolerance)
	(values)
	(disp value " is not within " tolerance " of " goal "\n")))
  (define (bool-equiv goal value)
    (if (eqv? goal value)
	(values)
	(disp value " is not equivalent to " goal "\n")))
  (define (pair-equiv goal value)
    (if (and (< (abs (- (car value) (car goal)))) (< (abs (- (cdr value) (cdr goal)))))
	(values)
	(disp value " is not equivalent to " goal "\n")))
  (define (list-equiv goal value)
    (if (equal? goal value)
	(values)
	(disp value " is not equivalent to " goal "\n")))
  (cond ((number? value) (num-equiv goal value))
	((boolean? value) (bool-equiv goal value))
	((pair? value) (pair-equiv goal value))
	((list? value) (list-equiv goal value))))

(define (test-extract-entry)
  (disp "Running tests for extract entry\n")
  (test-equivalence (extract-entry '("c" "d") *game-association-list*) '(3 4))

(define (run-all-tests)
  (test-extract-entry))

(cadr '("c" "d"))
