class ConvertMessage:
    def __init__(self, message):
        if isinstance(message, str):
            self.text = message
            self.number = self.convertTextToNumber(message)
        else:
            self.number = message
            self.text = self.convertNumberToText(message)

    def convertTextToNumber(self, message):
        numString = ''
        for c in message:
            if ord(c) < 100:
                numString = '{}{}'.format(numString, '0'+ str(ord(c)))
            else:
                numString = '{}{}'.format(numString, str(ord(c)))
        return int(numString)

    def convertNumberToText(self, message):
        tempMessage = str(message)
        finalMessage = ''
        while len(tempMessage) > 0:
            if len(tempMessage) < 3:
                finalMessage = '{}{}'.format(str(unichr(int(tempMessage))), finalMessage)
                tempMessage = ''
            else:
                endSlice = tempMessage[-3:]
                finalMessage = '{}{}'.format(str(unichr(int(endSlice))), finalMessage)
                tempMessage = tempMessage[:-3]
        return finalMessage
    
    def getString(self):
        return self.text

    def getNumber(self):
        return self.number


if __name__ == '__main__':
    myMessage = ConvertMessage('hello, how are you?')
    myMessage2 = ConvertMessage(myMessage.getNumber())
    assert myMessage.getString() == myMessage2.getString()
    assert myMessage.getNumber() == myMessage2.getNumber()
    print('Tests have passed')
