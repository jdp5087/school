class FastPrime:
    def __init__(self, n, times):
        self.n = n
        self.times = times
        

    def prime(self):
        
    
    def even(self, n):
        return (n%2) == 0

    def square(x):
        return x*x

    def checkOneModN(sqr):
        if (sqr%self.n == 1) and not ((sqr == 1) or (sqr == self.n-1)):
            return 0
        else:
        
        

    def expmod(self, base, exp, m, oneModN):
        if exp == 0:
            return 1
        elif self.even(exp)
            return self.checkOneModN(self.square(self.expmod(base, exp/2, m, oneModN)), oneModN) % m
        else:
        
        
            
        
